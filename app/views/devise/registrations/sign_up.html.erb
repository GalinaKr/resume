<style>
  span.field-icon {
    position: absolute;
    display: inline-block;
    cursor: pointer;
    right: 0.5rem;
    top: 1.0rem;
    z-index: 2;
  }
  /* Style all input fields */
  input {
    width: 100%;
    padding: 5px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    margin-top: 6px;
    margin-bottom: 16px;
  }


  /* The message box is shown when the user clicks on the password field */
  #message, .same_psw {
    display:none;
    background: white;
    color: #000;
    position: relative;
    left: 25px;
    top: -10px;
  }

  .valid:before {
    position: relative;
    left: -10px;
    color: green;
    content: "\2713";
  }

  /* Add a grey text color and an "x" when the requirements are wrong */
  .invalid {
    color: grey;
  }

  .invalid:before {
    position: relative;
    left: -10px;
    content: "\2981";
  }
</style>

<%= render 'nav_bar/link_to_login' %>

<div class="row justify-content-center">
  <div class="col-12 col-sm-8 col-md-6 shadow-sm bg-white">
    <div class="col-md-12">
      <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { novalidate: true, id: "regForm", class: "needs-validation" }) do |f| %>
        <div class="row-cols-1 setup-content-2" id="step-1">
          <%= render 'devise/shared/error_messages' %>
          <div class="h1 mb-5 mt-4 display-5 ml-4 text-secondary text-center">Join us</div>
          <div class="check-email mb-5 text-center"></div>
          <div class="row ml-1">
          <div class="col-md-6 mb-4 h4">
            <%= f.label I18n.t('user.first_name'), class: "text-secondary" %>
            <%= f.text_field :first_name, class: "form-control bg-white border-gray-dark", id: "firstName", required: true %>
          </div>
          <div class="col-md-6 mb-3 h4">
            <%= f.label I18n.t('user.last_name'), class: "text-secondary" %>
            <%= f.text_field :last_name, class: "form-control bg-white border-gray-dark", id: "lastName", required: true %>
          </div>
        </div>

        <div class="mb-5 col-md-12 h4">
          <%= f.label t('interface.placeholder.email'), class: "text-secondary" %><br />
          <%= f.email_field :email, class: "form-control bg-white border-gray-dark", id: "email", required: true %>
        </div>

        <hr class="mb-4">
        <button class="form-control-lg btn btn-outline-secondary col-md-12 mb-3 nextBtn-2" type="button"><%= t('interface.nav_bar.sign_up') %></button>

          <div class="text-center card-footer bg-white">
            <%= t('interface.registration.message.already_have_account') %> <%= link_to t('interface.registration.login'), new_user_session_path, class: "p-2" %>
          </div>
      </div>
      <div class="row-cols-1 setup-content-2" id="step-2">
        <div class="h1 mb-5 mt-4 display-5 text-secondary text-center"><%= t('interface.create_account.title') %></div>
        <div class="current_email row-cols-1 text-center text-secondary"></div>
        <div class="row-cols-1 text-center mb-3 mb-4">
          <a class="prevBtn-2 text-center text-muted" href="#"><%= t('interface.registration.change_email') %></a>
        </div>
        <div class="row-cols-1 text-secondary"><%= t('interface.create_account.password') %></div>
        <div class="input-group">
          <%=  f.password_field :password, id: "psw",  required: true  %>
          <span toggle="#psw" class="field-icon toggle-password"><i class="fas fa-fw fa-eye" aria-hidden="true"></i></span>
        </div>

        <div id="message">
          <div class="row">
            <div id="special" class="col-sm text-muted text-nowrap small"><%= t('interface.create_account.validation.special') %></div>
            <div id="number" class="col-sm text-muted text-nowrap small"><%= t('interface.create_account.validation.number') %></div>
          </div>
          <div class="row">
            <div id="capital" class="col-sm text-muted text-nowrap small"><%= t('interface.create_account.validation.capital') %></div>
            <div id="length" class="col-sm text-muted text-nowrap small"><%= t('interface.create_account.validation.min') %></div>
          </div>
        </div>

        <div class="text-secondary"><%= t('interface.registration.confirm_password') %></div>
        <div class="input-group mb-4">
          <%=  f.password_field :password_confirmation, id: "cPwdId", class: "myCpwdClass", required: true  %>
          <span toggle="#cPwdId" class="field-icon toggle-password"><i class="fas fa-fw fa-eye" aria-hidden="true"></i></span>
          <div id="same_psw" class="col-sm text-muted text-nowrap small same_psw"><%= t('interface.registration.same_password') %></div>
        </div>
        <hr class="mb-4">
        <%= f.submit t('interface.registration.create_account'), class: "form-control-lg btn btn-outline-secondary col-md-12 mb-3", id: "submitBtn" %>
      </div>
      <% end %>
    </div>
  </div>
</div>


<script>
  // --------- Check 2 page and validate on submit ----------
  $(document).ready(function(){
    const pswInput = document.getElementById("psw"),
      spesial = document.getElementById("special"),
      capital = document.getElementById("capital"),
      number = document.getElementById("number"),
      length = document.getElementById("length"),
      same_psw = document.getElementById("same_psw"),
      cInput = document.getElementById("cPwdId");
    // When the user clicks on the password field, show the message box
    pswInput.onfocus = function() {
      document.getElementById("message").style.display = "block";
    }

    // When the user clicks outside of the password field, hide the message box
    pswInput.onblur = function() {
      document.getElementById("message").style.display = "none";
    }

    // When the user clicks on the confirmation password field, show the message box
    cInput.onfocus = function() {
      same_psw.style.display = "inline";
    }

    // When the user clicks outside of the confirmation password field, hide the message box
    cInput.onblur = function() {
      same_psw.style.display = "none";
    }

    // When the user starts to type something inside the password field
    pswInput.onkeyup = function() {
      // Validate lowercase letters
      var specialCharacters = /[!@#$%^&*\?\+\-]/g;
      if(pswInput.value.match(specialCharacters)) {
        special.classList.remove("invalid");
        special.classList.add("valid");
      } else {
        special.classList.remove("valid");
        special.classList.add("invalid");
      }

      // Validate capital letters
      var upperCaseLetters = /[A-Z]/g;
      if(pswInput.value.match(upperCaseLetters)) {
        capital.classList.remove("invalid");
        capital.classList.add("valid");
      } else {
        capital.classList.remove("valid");
        capital.classList.add("invalid");
      }

      // Validate numbers
      var numbers = /[0-9]/g;
      if(pswInput.value.match(numbers)) {
        number.classList.remove("invalid");
        number.classList.add("valid");
      } else {
        number.classList.remove("valid");
        number.classList.add("invalid");
      }

      // Validate length
      if(pswInput.value.length >= 8) {
        length.classList.remove("invalid");
        length.classList.add("valid");
      } else {
        length.classList.remove("valid");
        length.classList.add("invalid");
      }

      if(length.classList.contains('valid') && number.classList.contains('valid') && capital.classList.contains('valid') && spesial.classList.contains('valid')) {
        pswInput.classList.add('valid');
        pswInput.classList.remove('invalid');
      } else {
        pswInput.classList.add('invalid');
        pswInput.classList.remove('valid');
      }
    }

    $('.toggle-password').on('click', function() {
      $(this).find('svg').toggleClass('fa-eye fa-eye-slash');
      let input = $($(this).attr('toggle'));
      if (input.attr('type') == 'password') {
        input.attr('type', 'text');
      }
      else {
        input.attr('type', 'password');
      }
    });

    // ----------- Set all elements as INVALID --------------
    cInput.classList.add('invalid');
    // ------------ Check passwords similarity --------------
    $('#cPwdId').on('keyup', function () {
      if ($('#psw').val() != '' && $('#cPwdId').val() != '' && $('#psw').val() == $('#cPwdId').val() ) {
        same_psw.classList.remove("invalid");
        same_psw.classList.add("valid");
        cInput.classList.add('valid');
        cInput.classList.remove('invalid');
      } else {
        same_psw.classList.remove("valid");
        same_psw.classList.add("invalid");
        cInput.classList.remove('valid');
        cInput.classList.add('invalid');
      }
    });
    // ----------------- Validate on submit -----------------
    const currForm = document.getElementById('regForm');
    currForm.addEventListener('submit', function(event) {
      if(pswInput.classList.contains('valid') && cInput.classList.contains('valid')){
        currForm.classList.add('was-validated');
      } else {
        event.preventDefault();
        event.stopPropagation();
      }
    }, false);

  //------- Check 1 step and describe next and prev button ----
    bootstrapValidate('#email', 'email:Enter a valid E-Mail Address!');
    bootstrapValidate('#lastName', 'min:2:Valid last name is required.');
    bootstrapValidate('#firstName', 'min:2:Valid first name is required.');

    const step1 = $('#step-1'),
          step2 = $('#step-2'),
          NextBtn = $('.nextBtn-2'),
          prevBtn = $('.prevBtn-2')

    step2.hide();

    NextBtn.click(function(e){
      var nameInputs = $('#firstName'),
          lastnameInputs = $('#lastName');

      $.ajax({
        type: "POST",
        url: '/check_users_email',
        data: { email: $('#email').val() },
        dataType: 'json',
        success: function (data) {
          if (data['same_email'] == true) {
            $('.check-email').html('An account already exists with email address <b>' + data['email'] + '</b>. Click<%= link_to "here", new_user_session_path, class: "p-2" %>to try logging in.');
            document.cookie = "email="+data['email'];
          } else {
            if (nameInputs[0].validity.valid && lastnameInputs[0].validity.valid && $('#email')[0].validity.valid){
              var email = $('#email').val();
              e.preventDefault();
              step1.hide();
              $('.current_email').text(email);
              step2.show();
              $(this).find('input:eq(0)').focus();
            } else {
              e.preventDefault();
            }
          }
        }
      });
    });

    prevBtn.click(function(){
      $('#regForm').find('input:eq(0)').focus();
      step2.hide();
      step1.show();
    });
  });
</script>
